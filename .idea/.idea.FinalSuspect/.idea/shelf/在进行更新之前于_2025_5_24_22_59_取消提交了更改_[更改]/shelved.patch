Index: FinalSuspect/Modules/Features/CheckingandBlocking/RPC.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Reflection;\r\nusing System.Threading.Tasks;\r\nusing FinalSuspect.Helpers;\r\nusing FinalSuspect.Modules.Core.Game;\r\nusing FinalSuspect.Patches.Game_Vanilla;\r\nusing FinalSuspect.Patches.System;\r\nusing Hazel;\r\nusing InnerNet;\r\n\r\nnamespace FinalSuspect.Modules.Features.CheckingandBlocking;\r\n\r\npublic enum Sounds\r\n{\r\n    KillSound,\r\n    TaskComplete,\r\n    TaskUpdateSound,\r\n    ImpTransform,\r\n    Yeehawfrom,\r\n}\r\n\r\n[HarmonyPatch]\r\ninternal class RPCHandlerPatch\r\n{\r\n    public static IEnumerable<MethodBase> TargetMethods()\r\n    {\r\n        return from type in typeof(InnerNetObject).Assembly.GetTypes() where typeof(InnerNetObject).IsAssignableFrom(type) && !type.IsAbstract select type.GetMethod(\"HandleRpc\", BindingFlags.Public | BindingFlags.Instance) into method where method != null && method.GetBaseDefinition() != method select method;\r\n    }\r\n\r\n    public static bool Prefix(InnerNetObject __instance, [HarmonyArgument(0)] ref byte callId, [HarmonyArgument(1)] MessageReader reader)\r\n    {\r\n        if (!__instance) return true;\r\n\r\n        var player = GetPlayerFromInstance(__instance, reader);\r\n        if (player?.GetCheatData()?.InComingOverloaded != true)\r\n        {\r\n            var cd = player?.GetCheatData();\r\n            Info(player && player.Data\r\n                ? $\"{player.Data.PlayerId}(\" +\r\n                  $\"Name: {player.Data.PlayerName},\" +\r\n                  $\"FriendCode: {cd?.FriendCode},\" +\r\n                  $\"Puid: {cd?.Puid},\" +\r\n                  $\")\" +\r\n                  $\"{(player.IsHost() ? \"Host\" : \"\")}:{callId}({RPC.GetRpcName(callId)})\"\r\n                : $\"Call from {__instance.name}:{callId}({RPC.GetRpcName(callId)})\", \"ReceiveRPC\");\r\n        }\r\n\r\n        if (!player) return true;\r\n\r\n        if (OnPlayerLeftPatch.ClientsProcessed.Contains(player.PlayerId)) return false;\r\n\r\n        HandleCheatDetection(player, callId, reader);\r\n\r\n        var rpcType = (RpcCalls)callId;\r\n        ProcessRpc(rpcType, player, reader);\r\n\r\n        return true;\r\n    }\r\n\r\n    private static PlayerControl GetPlayerFromInstance(InnerNetObject instance, MessageReader reader)\r\n    {\r\n        var player = XtremePlayerData.AllPlayerData.FirstOrDefault(x => instance.OwnerId == x.Player.OwnerId)?.Player;\r\n        if (player) return player;\r\n\r\n        try\r\n        {\r\n            var sr = MessageReader.Get(reader);\r\n            player = sr.ReadNetObject<PlayerControl>();\r\n        }\r\n        catch\r\n        {\r\n            /* ignored */\r\n        }\r\n\r\n        return player;\r\n    }\r\n\r\n    private static void HandleCheatDetection(PlayerControl player, byte callId, MessageReader reader)\r\n    {\r\n        if (XtremePlayerData.AllPlayerData.All(data => data.PlayerId != player.Data?.PlayerId)) return;\r\n        if (!ReceiveRpc(player, callId, reader, out var notify, out var reason, out var ban)) return;\r\n        HandleCheater(player, notify, reason, ban, callId);\r\n    }\r\n\r\n    private static void HandleCheater(PlayerControl player, bool notify, string reason, bool ban, byte callId)\r\n    {\r\n        if (!player.IsLocalPlayer())\r\n        {\r\n            player.MarkAsCheater();\r\n        }\r\n\r\n        if (AmongUsClient.Instance.AmHost)\r\n        {\r\n            KickPlayer(player.PlayerId, ban, reason);\r\n            WarnHost();\r\n            if (notify)\r\n            {\r\n                NotificationPopperPatch.NotificationPop(\r\n                    string.Format(GetString(\"Warning.InvalidSlothRPC\"), player.GetRealName(), $\"{callId}({RPC.GetRpcName(callId)})\"));\r\n            }\r\n        }\r\n        else if (notify)\r\n        {\r\n            NotificationPopperPatch.NotificationPop(\r\n                string.Format(GetString(\"Warning.InvalidSlothRPC_NotHost\"), player.GetRealName(), $\"{callId}({RPC.GetRpcName(callId)})\"));\r\n        }\r\n    }\r\n\r\n    // 处理RPC调用的逻辑\r\n    private static void ProcessRpc(RpcCalls rpcType, PlayerControl player, MessageReader reader)\r\n    {\r\n        var subReader = MessageReader.Get(reader);\r\n\r\n        switch (rpcType)\r\n        {\r\n            case RpcCalls.CheckName:\r\n                HandleCheckNameRpc(player, subReader);\r\n                break;\r\n            case RpcCalls.SetName:\r\n                HandleSetNameRpc(player, subReader);\r\n                break;\r\n            case RpcCalls.SendChat:\r\n                HandleSendChatRpc(player, subReader);\r\n                break;\r\n            case RpcCalls.SendQuickChat:\r\n                HandleSendQuickChatRpc(player);\r\n                break;\r\n            case RpcCalls.StartMeeting:\r\n                HandleStartMeetingRpc(player, subReader);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private static void HandleCheckNameRpc(PlayerControl player, MessageReader reader)\r\n    {\r\n        var name = reader.ReadString();\r\n        Info(\"RPC Check Name For Player: \" + name, \"CheckName\");\r\n        if (player.IsHost())\r\n            Main.HostNickName = name;\r\n        if (XtremePlayerData.AllPlayerData.All(data => data.PlayerId != player.PlayerId))\r\n            XtremePlayerData.CreateDataFor(player, name);\r\n    }\r\n\r\n    private static void HandleSetNameRpc(PlayerControl player, MessageReader reader)\r\n    {\r\n        reader.ReadUInt32();\r\n        var name = reader.ReadString();\r\n        Info(\"RPC Set Name For Player: \" + player.GetNameWithRole() + \" => \" + name, \"SetName\");\r\n    }\r\n\r\n    private static void HandleSendChatRpc(PlayerControl player, MessageReader reader)\r\n    {\r\n        var text = reader.ReadString();\r\n        Info($\"{player.GetNameWithRole().RemoveHtmlTags()}:{text.RemoveHtmlTags()}\", \"ReceiveChat\");\r\n    }\r\n\r\n    private static void HandleSendQuickChatRpc(PlayerControl player)\r\n    {\r\n        Info($\"{player.GetNameWithRole().RemoveHtmlTags()}:Some message from quick chat\", \"ReceiveChat\");\r\n    }\r\n\r\n    private static void HandleStartMeetingRpc(PlayerControl player, MessageReader reader)\r\n    {\r\n        var p = GetPlayerById(reader.ReadByte());\r\n        Info($\"{player.GetNameWithRole()} => {p?.GetNameWithRole() ?? \"null\"}\", \"StartMeeting\");\r\n    }\r\n\r\n    public static void Postfix(InnerNetObject __instance, [HarmonyArgument(0)] byte callId,\r\n        [HarmonyArgument(1)] MessageReader reader)\r\n    {\r\n        if (!__instance) return;\r\n\r\n        var netId = __instance.NetId;\r\n        var player = XtremePlayerData.AllPlayerData.FirstOrDefault(x => x.NetId == netId)?.Player;\r\n        if (!player) return;\r\n\r\n        var rpcType = (RpcCalls)callId;\r\n        switch (rpcType)\r\n        {\r\n            case RpcCalls.CancelPet:\r\n                try\r\n                {\r\n                    var version = Version.Parse(reader.ReadString());\r\n                    var tag = reader.ReadString();\r\n                    var forkId = reader.ReadString();\r\n\r\n                    XtremeGameData.PlayerVersion.playerVersion[player.PlayerId] =\r\n                        new XtremeGameData.PlayerVersion(version, tag, forkId);\r\n\r\n                    if (!XtremeGameData.PlayerVersion.playerVersion.ContainsKey(player.PlayerId))\r\n                        RPC.RpcVersionCheck();\r\n\r\n                    if (Main.VersionCheat.Value && AmongUsClient.Instance.AmHost)\r\n                        XtremeGameData.PlayerVersion.playerVersion[player.PlayerId] =\r\n                            XtremeGameData.PlayerVersion.playerVersion[0];\r\n\r\n                    // Kick Unmached Player Start\r\n                    /*if (AmongUsClient.Instance.AmHost && tag != $\"{Main.GitCommit}({Main.GitBranch})\")\r\n                    {\r\n                        if (forkId != Main.ForkId)\r\n                            _ = new LateTask(() =>\r\n                            {\r\n                                if (__instance?.Data?.Disconnected is not null and not true)\r\n                                {\r\n                                    var msg = string.Format(GetString(\"KickBecauseDiffrentVersionOrMod\"), __instance?.Data?.PlayerName);\r\n                                    Warn(msg, \"Version Kick\");\r\n                                    NotificationPopperPatch.NotificationPop(msg);\r\n                                    KickPlayer(__instance.GetClientId(), false, \"ModVersionIncorrect\");\r\n                                }\r\n                            }, 5f, \"Kick\");\r\n                    }*/\r\n                }\r\n                catch\r\n                {\r\n                    /* ignored */\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\ninternal static class RPC\r\n{\r\n    public static async void RpcVersionCheck()\r\n    {\r\n        try\r\n        {\r\n            while (!PlayerControl.LocalPlayer) await Task.Delay(500);\r\n            if (!Main.VersionCheat.Value)\r\n            {\r\n                var writer = AmongUsClient.Instance.StartRpcImmediately(PlayerControl.LocalPlayer.NetId, (byte)RpcCalls.CancelPet, SendOption.Reliable);\r\n                writer.Write(Main.PluginVersion);\r\n                writer.Write($\"{Main.GitCommit}({Main.GitBranch})\");\r\n                writer.Write(Main.ForkId);\r\n                AmongUsClient.Instance.FinishRpcImmediately(writer);\r\n            }\r\n\r\n            XtremeGameData.PlayerVersion.playerVersion[PlayerControl.LocalPlayer.PlayerId] =\r\n                new XtremeGameData.PlayerVersion(Main.PluginVersion, $\"{Main.GitCommit}({Main.GitBranch})\",\r\n                    Main.ForkId);\r\n        }\r\n        catch\r\n        {\r\n            /* ignored */\r\n        }\r\n    }\r\n\r\n    public static void SendRpcLogger(uint targetNetId, byte callId, int targetClientId = -1)\r\n    {\r\n        if (!DebugModeManager.AmDebugger) return;\r\n        var rpcName = GetRpcName(callId);\r\n        var from = targetNetId.ToString();\r\n        var target = targetClientId.ToString();\r\n        try\r\n        {\r\n            target = targetClientId < 0 ? \"All\" : AmongUsClient.Instance.GetClient(targetClientId).PlayerName;\r\n            from = Main.AllPlayerControls.FirstOrDefault(c => c.NetId == targetNetId)?.Data?.PlayerName;\r\n        }\r\n        catch\r\n        {\r\n            /* ignored */\r\n        }\r\n\r\n        Info($\"FromNetID:{targetNetId}({from}) TargetClientID:{targetClientId}({target}) CallID:{callId}({rpcName})\", \"SendRPC\");\r\n    }\r\n\r\n    public static string GetRpcName(byte callId)\r\n    {\r\n        string rpcName;\r\n        if ((rpcName = Enum.GetName(typeof(RpcCalls), callId)) == null)\r\n            rpcName = callId + \"(无效)\";\r\n        return rpcName;\r\n    }\r\n}\r\n\r\n[HarmonyPatch(typeof(InnerNetClient), nameof(InnerNetClient.StartRpcImmediately))]\r\ninternal class StartRpcImmediatelyPatch\r\n{\r\n    public static void Prefix([HarmonyArgument(0)] uint targetNetId, [HarmonyArgument(1)] byte callId,\r\n        [HarmonyArgument(3)] int targetClientId = -1)\r\n    {\r\n        RPC.SendRpcLogger(targetNetId, callId, targetClientId);\r\n    }\r\n}\r\n\r\n[HarmonyPatch(typeof(MessageReader), nameof(MessageReader.ReadUInt16))]\r\n[HarmonyPatch(typeof(MessageReader), nameof(MessageReader.ReadPackedUInt32))]\r\n[HarmonyPriority(Priority.First)]\r\ninternal class HazelPatch\r\n{\r\n    public static bool Prefix(MessageReader __instance)\r\n    {\r\n        return __instance.Length > 0;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/Modules/Features/CheckingandBlocking/RPC.cs b/FinalSuspect/Modules/Features/CheckingandBlocking/RPC.cs
--- a/FinalSuspect/Modules/Features/CheckingandBlocking/RPC.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/Modules/Features/CheckingandBlocking/RPC.cs	(date 1748098312395)
@@ -26,10 +26,16 @@
 {
     public static IEnumerable<MethodBase> TargetMethods()
     {
-        return from type in typeof(InnerNetObject).Assembly.GetTypes() where typeof(InnerNetObject).IsAssignableFrom(type) && !type.IsAbstract select type.GetMethod("HandleRpc", BindingFlags.Public | BindingFlags.Instance) into method where method != null && method.GetBaseDefinition() != method select method;
+        return from type in typeof(InnerNetObject).Assembly.GetTypes()
+            where typeof(InnerNetObject).IsAssignableFrom(type) && !type.IsAbstract
+            select type.GetMethod("HandleRpc", BindingFlags.Public | BindingFlags.Instance)
+            into method
+            where method != null && method.GetBaseDefinition() != method
+            select method;
     }
 
-    public static bool Prefix(InnerNetObject __instance, [HarmonyArgument(0)] ref byte callId, [HarmonyArgument(1)] MessageReader reader)
+    public static bool Prefix(InnerNetObject __instance, [HarmonyArgument(0)] ref byte callId,
+        [HarmonyArgument(1)] MessageReader reader)
     {
         if (!__instance) return true;
 
@@ -98,13 +104,15 @@
             if (notify)
             {
                 NotificationPopperPatch.NotificationPop(
-                    string.Format(GetString("Warning.InvalidSlothRPC"), player.GetRealName(), $"{callId}({RPC.GetRpcName(callId)})"));
+                    string.Format(GetString("Warning.InvalidSlothRPC"), player.GetRealName(),
+                        $"{callId}({RPC.GetRpcName(callId)})"));
             }
         }
         else if (notify)
         {
             NotificationPopperPatch.NotificationPop(
-                string.Format(GetString("Warning.InvalidSlothRPC_NotHost"), player.GetRealName(), $"{callId}({RPC.GetRpcName(callId)})"));
+                string.Format(GetString("Warning.InvalidSlothRPC_NotHost"), player.GetRealName(),
+                    $"{callId}({RPC.GetRpcName(callId)})"));
         }
     }
 
@@ -231,7 +239,8 @@
             while (!PlayerControl.LocalPlayer) await Task.Delay(500);
             if (!Main.VersionCheat.Value)
             {
-                var writer = AmongUsClient.Instance.StartRpcImmediately(PlayerControl.LocalPlayer.NetId, (byte)RpcCalls.CancelPet, SendOption.Reliable);
+                var writer = AmongUsClient.Instance.StartRpcImmediately(PlayerControl.LocalPlayer.NetId,
+                    (byte)RpcCalls.CancelPet, SendOption.Reliable);
                 writer.Write(Main.PluginVersion);
                 writer.Write($"{Main.GitCommit}({Main.GitBranch})");
                 writer.Write(Main.ForkId);
@@ -264,7 +273,8 @@
             /* ignored */
         }
 
-        Info($"FromNetID:{targetNetId}({from}) TargetClientID:{targetClientId}({target}) CallID:{callId}({rpcName})", "SendRPC");
+        Info($"FromNetID:{targetNetId}({from}) TargetClientID:{targetClientId}({target}) CallID:{callId}({rpcName})",
+            "SendRPC");
     }
 
     public static string GetRpcName(byte callId)
Index: FinalSuspect/main.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Reflection;\r\nusing System.Threading.Tasks;\r\nusing AmongUs.GameOptions;\r\nusing BepInEx;\r\nusing BepInEx.Configuration;\r\nusing BepInEx.Logging;\r\nusing BepInEx.Unity.IL2CPP;\r\nusing FinalSuspect;\r\nusing FinalSuspect.Attributes;\r\nusing FinalSuspect.Helpers;\r\nusing FinalSuspect.Internal;\r\nusing FinalSuspect.Modules.Random;\r\nusing Il2CppInterop.Runtime.Injection;\r\nusing UnityEngine;\r\n\r\n// ReSharper disable MemberCanBePrivate.Global\r\n\r\n[assembly: AssemblyFileVersion(Main.PluginVersion)]\r\n[assembly: AssemblyInformationalVersion(Main.PluginVersion)]\r\n[assembly: AssemblyVersion(Main.PluginVersion)]\r\n\r\nnamespace FinalSuspect;\r\n\r\n[BepInPlugin(PluginGuid, \"FinalSuspect\", PluginVersion)]\r\n[BepInProcess(\"Among Us.exe\")]\r\npublic class Main : BasePlugin\r\n{\r\n    // == 程序基本设定 / Program Config ==\r\n    public const string ModName = \"Final Suspect\";\r\n    public const string ForkId = \"Final Suspect\";\r\n    public const string PluginVersion = \"1.1.3.7\";\r\n    public const string PluginGuid = \"cn.finalsuspect.xtremewave\";\r\n    public const int PluginCreation = 0;\r\n\r\n    // == 认证设定 / Authentication Config ==\r\n    public static HashAuth DebugKeyAuth { get; private set; }\r\n    public const string DebugKeyHash = \"c0fd562955ba56af3ae20d7ec9e64c664f0facecef4b3e366e109306adeae29d\";\r\n    public const string DebugKeySalt = \"59687b\";\r\n    public static ConfigEntry<string> DebugKeyInput { get; private set; }\r\n\r\n    // == 版本相关设定 / Version Config ==\r\n    public const string LowestSupportedVersion = \"2025.4.15\"; // 16.0.5\r\n\r\n    private const string DisplayedVersion_Head = \"1.1\";\r\n\r\n    private const string DisplayedVersion_Date = BuildTime.Date;\r\n\r\n    /// <summary>\r\n    /// 表示当前显示的版本类型。\r\n    /// </summary>\r\n    private const VersionTypes DisplayedVersion_Type = VersionTypes.Canary;\r\n\r\n    private const int DisplayedVersion_TestCreation = 8;\r\n\r\n    public static readonly string DisplayedVersion =\r\n#if RELEASE\r\n        $\"{DisplayedVersion_Head}_{DisplayedVersion_Date}\";\r\n#else\r\n        $\"{DisplayedVersion_Head}_{DisplayedVersion_Date}_{DisplayedVersion_Type}_{DisplayedVersion_TestCreation}\";\r\n#endif\r\n\r\n\r\n    // == 链接相关设定 / Link Config ==\r\n    //public static readonly string WebsiteUrl = IsChineseLanguageUser ? \"https://www.xtreme.net.cn/project/FS/\" : \"https://www.xtreme.net.cn/en/project/FS/\";\r\n    public const string QQInviteUrl = \"https://qm.qq.com/q/GNbm9UjfCa\";\r\n    public const string DiscordInviteUrl = \"https://discord.gg/kz787Zg7h8/\";\r\n    public const string GithubRepoUrl = \"https://github.com/XtremeWave/FinalSuspect/\";\r\n\r\n    // ==========\r\n    public Harmony Harmony { get; } = new(PluginGuid);\r\n    public static readonly Version version = Version.Parse(PluginVersion);\r\n    public static ManualLogSource Logger;\r\n    public static bool hasArgumentException;\r\n    public static string ExceptionMessage;\r\n    public static bool ExceptionMessageIsShown;\r\n    public static string CredentialsText;\r\n\r\n#pragma warning disable CS0618 // 类型或成员已过时\r\n    public const string GitBaseTag = ThisAssembly.Git.BaseTag;\r\n    public const string GitCommit = ThisAssembly.Git.Commit;\r\n    public const string GitCommits = ThisAssembly.Git.Commits;\r\n    public const string GitBranch = ThisAssembly.Git.Branch;\r\n    public const bool GitIsDirty = ThisAssembly.Git.IsDirty;\r\n    public const string GitSha = ThisAssembly.Git.Sha;\r\n    public const string GitTag = ThisAssembly.Git.Tag;\r\n#pragma warning restore CS0618\r\n    public static NormalGameOptionsV09 NormalOptions => GameOptionsManager.Instance.currentNormalGameOptions;\r\n    public static HideNSeekGameOptionsV09 HideNSeekOptions => GameOptionsManager.Instance.currentHideNSeekGameOptions;\r\n\r\n    //Client Options\r\n    public static ConfigEntry<bool> KickPlayerWhoFriendCodeNotExist { get; private set; }\r\n    public static ConfigEntry<bool> KickPlayerWithDenyName { get; private set; }\r\n    public static ConfigEntry<bool> KickPlayerInBanList { get; private set; }\r\n    public static ConfigEntry<bool> SpamDenyWord { get; private set; }\r\n    public static ConfigEntry<bool> UnlockFPS { get; private set; }\r\n    public static ConfigEntry<string> ChangeOutfit { get; private set; }\r\n    public static ConfigEntry<bool> AutoStartGame { get; private set; }\r\n    public static ConfigEntry<bool> AutoEndGame { get; private set; }\r\n    public static ConfigEntry<bool> DisableVanillaSound { get; private set; }\r\n    public static ConfigEntry<bool> DisableFAC { get; private set; }\r\n    public static ConfigEntry<bool> ShowPlayerInfo { get; private set; }\r\n    public static ConfigEntry<bool> UseModCursor { get; private set; }\r\n    public static ConfigEntry<bool> FastBoot { get; private set; }\r\n    public static ConfigEntry<bool> VersionCheat { get; private set; }\r\n    public static ConfigEntry<bool> GodMode { get; private set; }\r\n    public static ConfigEntry<bool> NoGameEnd { get; private set; }\r\n\r\n    public static readonly string[] OutfitType =\r\n    [\r\n        \"BeanMode\", \"HorseMode\", \"LongMode\"\r\n    ];\r\n\r\n    //Other Configs\r\n    public static ConfigEntry<string> HideName { get; private set; }\r\n    public static ConfigEntry<string> HideColor { get; private set; }\r\n    public static ConfigEntry<bool> ShowResults { get; private set; }\r\n    public static ConfigEntry<string> WebhookURL { get; private set; }\r\n    public static ConfigEntry<bool> EnableFinalSuspect { get; private set; }\r\n    public static ConfigEntry<string> LastStartVersion { get; private set; }\r\n\r\n    public static Dictionary<RoleTypes, string> roleColors;\r\n    public static List<int> clientIdList = [];\r\n\r\n    public static string HostNickName = \"\";\r\n    public static bool IsInitialRelease = DateTime.Now.Month == 8 && DateTime.Now.Day is 14;\r\n    public static bool IsAprilFools = DateTime.Now.Month == 4 && DateTime.Now.Day is 1;\r\n    public const float RoleTextSize = 2f;\r\n\r\n    public static IEnumerable<PlayerControl> AllPlayerControls =>\r\n        PlayerControl.AllPlayerControls.ToArray().Where(p => p);\r\n\r\n    public static IEnumerable<PlayerControl> AllAlivePlayerControls =>\r\n        PlayerControl.AllPlayerControls.ToArray().Where(p => p && p.IsAlive() && !p.Data.Disconnected);\r\n\r\n    public static Main Instance;\r\n\r\n    //public static bool NewLobby = false;\r\n\r\n    public static readonly List<string> TName_Snacks_CN =\r\n    [\r\n        \"冰激凌\", \"奶茶\", \"巧克力\", \"蛋糕\", \"甜甜圈\", \"可乐\", \"柠檬水\", \"冰糖葫芦\", \"果冻\", \"糖果\", \"牛奶\",\r\n        \"抹茶\", \"烧仙草\", \"菠萝包\", \"布丁\", \"椰子冻\", \"曲奇\", \"红豆土司\", \"三彩团子\", \"艾草团子\", \"泡芙\", \"可丽饼\",\r\n        \"桃酥\", \"麻薯\", \"鸡蛋仔\", \"马卡龙\", \"雪梅娘\", \"炒酸奶\", \"蛋挞\", \"松饼\", \"西米露\", \"奶冻\", \"奶酥\", \"可颂\", \"奶糖\"\r\n    ];\r\n\r\n    public static readonly List<string> TName_Snacks_EN =\r\n    [\r\n        \"Ice cream\", \"Milk tea\", \"Chocolate\", \"Cake\", \"Donut\", \"Coke\", \"Lemonade\", \"Candied haws\", \"Jelly\", \"Candy\",\r\n        \"Milk\",\r\n        \"Matcha\", \"Burning Grass Jelly\", \"Pineapple Bun\", \"Pudding\", \"Coconut Jelly\", \"Cookies\", \"Red Bean Toast\",\r\n        \"Three Color Dumplings\", \"Wormwood Dumplings\", \"Puffs\", \"Can be Crepe\", \"Peach Crisp\", \"Mochi\", \"Egg Waffle\",\r\n        \"Macaron\",\r\n        \"Snow Plum Niang\", \"Fried Yogurt\", \"Egg Tart\", \"Muffin\", \"Sago Dew\", \"panna cotta\", \"soufflé\", \"croissant\",\r\n        \"toffee\"\r\n    ];\r\n\r\n    public static string Get_TName_Snacks =>\r\n        TranslationController.Instance.currentLanguage.languageID is SupportedLangs.SChinese or SupportedLangs.TChinese\r\n            ? TName_Snacks_CN[IRandom.Instance.Next(0, TName_Snacks_CN.Count)]\r\n            : TName_Snacks_EN[IRandom.Instance.Next(0, TName_Snacks_EN.Count)];\r\n\r\n    public override void Load()\r\n    {\r\n        Instance = this;\r\n\r\n        //Client Options\r\n        HideName = Config.Bind(\"Xtreme System\", \"Hide Game Code Name\", \"Final Suspect\");\r\n        HideColor = Config.Bind(\"Xtreme System\", \"Hide Game Code Color\", $\"{ColorHelper.ModColor}\");\r\n        EnableFinalSuspect = Config.Bind(\"Xtreme System\", \"Enable Final Suspect\", true);\r\n        ShowResults = Config.Bind(\"Xtreme System\", \"Show Results\", true);\r\n        LastStartVersion = Config.Bind(\"Xtreme System\", \"Last Start Version\", \"0.0.0\");\r\n\r\n        DebugKeyInput = Config.Bind(\"Authentication\", \"Debug Key\", \"\");\r\n\r\n        UnlockFPS = Config.Bind(\"Client Options\", \"Unlock FPS\", false);\r\n        ChangeOutfit = Config.Bind(\"Client Options\", \"Change Outfit\", OutfitType[0]);\r\n        KickPlayerWhoFriendCodeNotExist = Config.Bind(\"Client Options\", \"Kick Player FriendCode Not Exist\", true);\r\n        KickPlayerInBanList = Config.Bind(\"Client Options\", \"Kick Player In BanList\", true);\r\n        KickPlayerWithDenyName = Config.Bind(\"Client Options\", \"Kick Player With Deny Name\", true);\r\n        SpamDenyWord = Config.Bind(\"Client Options\", \"Spam Deny Word\", true);\r\n        AutoStartGame = Config.Bind(\"Client Options\", \"Auto Start Game\", false);\r\n        AutoEndGame = Config.Bind(\"Client Options\", \"Auto End Game\", false);\r\n        DisableVanillaSound = Config.Bind(\"Client Options\", \"Disable Vanilla Sound\", false);\r\n        DisableFAC = Config.Bind(\"Client Options\", \"Disable FAC\", false);\r\n        //PrunkMode = Config.Bind(\"Client Options\", \"Prunk Mode\", false);\r\n        ShowPlayerInfo = Config.Bind(\"Client Options\", \"Show Player Info\", true);\r\n        UseModCursor = Config.Bind(\"Client Options\", \"Use Mod Cursor\", true);\r\n        FastBoot = Config.Bind(\"Client Options\", \"Fast Boot\", false);\r\n        VersionCheat = Config.Bind(\"Client Options\", \"Version Cheat\", false);\r\n        GodMode = Config.Bind(\"Client Options\", \"God Mode\", false);\r\n        NoGameEnd = Config.Bind(\"Client Options\", \"No Game End\", false);\r\n\r\n        Logger = BepInEx.Logging.Logger.CreateLogSource(\"FinalSuspect\");\r\n        Enable();\r\n        Disable(\"SwitchSystem\");\r\n        Disable(\"ModNews\");\r\n        Disable(\"CancelPet\");\r\n        if (!DebugModeManager.AmDebugger)\r\n        {\r\n            Disable(\"Download Resources\");\r\n            Disable(\"GetAnnouncements\");\r\n            Disable(\"GetConfigs\");\r\n        }\r\n\r\n        isDetail = true;\r\n\r\n        // 認証関連-初期化\r\n        DebugKeyAuth = new HashAuth(DebugKeyHash, DebugKeySalt);\r\n\r\n        // 認証関連-認証\r\n        DebugModeManager.Auth(DebugKeyAuth, DebugKeyInput.Value);\r\n\r\n        WebhookURL = Config.Bind(\"hook\", \"WebhookURL\", \"none\");\r\n\r\n        hasArgumentException = false;\r\n        ExceptionMessage = \"\";\r\n        try\r\n        {\r\n            roleColors = new Dictionary<RoleTypes, string>\r\n            {\r\n                { RoleTypes.CrewmateGhost, \"#8CFFFF\" },\r\n                { RoleTypes.GuardianAngel, \"#8CFFDB\" },\r\n                { RoleTypes.Crewmate, \"#8CFFFF\" },\r\n                { RoleTypes.Scientist, \"#F8FF8C\" },\r\n                { RoleTypes.Engineer, \"#A5A8FF\" },\r\n                { RoleTypes.Noisemaker, \"#FFC08C\" },\r\n                { RoleTypes.Tracker, \"#93FF8C\" },\r\n                { RoleTypes.ImpostorGhost, \"#FF1919\" },\r\n                { RoleTypes.Impostor, \"#FF1919\" },\r\n                { RoleTypes.Shapeshifter, \"#FF819E\" },\r\n                { RoleTypes.Phantom, \"#CA8AFF\" },\r\n            };\r\n        }\r\n        catch (ArgumentException ex)\r\n        {\r\n            Error(\"错误：字典出现重复项\", \"LoadDictionary\");\r\n            Exception(ex, \"LoadDictionary\");\r\n            hasArgumentException = true;\r\n            ExceptionMessage = ex.Message;\r\n            ExceptionMessageIsShown = false;\r\n        }\r\n\r\n        RegistryManager.Init(); // 这是优先级最高的模块初始化方法，不能使用模块初始化属性\r\n\r\n        PluginModuleInitializerAttribute.InitializeAll();\r\n\r\n        IRandom.SetInstance(new NetRandomWrapper());\r\n\r\n        Info($\"{Application.version}\", \"AmongUs Version\");\r\n\r\n        var handler = Handler(\"GitVersion\");\r\n        handler.Info($\"{nameof(GitBaseTag)}: {GitBaseTag}\");\r\n        handler.Info($\"{nameof(GitCommit)}: {GitCommit}\");\r\n        handler.Info($\"{nameof(GitCommits)}: {GitCommits}\");\r\n        handler.Info($\"{nameof(GitIsDirty)}: {GitIsDirty}\");\r\n        handler.Info($\"{nameof(GitSha)}: {GitSha}\");\r\n        handler.Info($\"{nameof(GitTag)}: {GitTag}\");\r\n\r\n        ClassInjector.RegisterTypeInIl2Cpp<ErrorText>();\r\n\r\n        Task.Run(SystemEnvironment.SetEnvironmentVariablesAsync);\r\n\r\n        Harmony.PatchAll();\r\n\r\n        if (DebugModeManager.AmDebugger) ConsoleManager.CreateConsole();\r\n        else ConsoleManager.DetachConsole();\r\n\r\n        Msg(\"========= FinalSuspect loaded! =========\", \"Plugin Load\");\r\n        Application.quitting += new Action(SaveNowLog);\r\n    }\r\n}\r\n\r\n/// <summary>\r\n/// 表示软件版本的不同类型。\r\n/// </summary>\r\npublic enum VersionTypes\r\n{\r\n    /// <summary>早期内测版。</summary>\r\n    Alpha,\r\n\r\n    /// <summary>内测版。</summary>\r\n    Beta,\r\n\r\n    /// <summary>测试版（不稳定）。</summary>\r\n    Canary,\r\n\r\n    /// <summary>开发版。</summary>\r\n    Dev,\r\n\r\n    /// <summary>发行候选版 (Release Candidate)。</summary>\r\n    RC,\r\n\r\n    /// <summary>预览/预发行版。</summary>\r\n    Preview,\r\n\r\n    /// <summary>废弃版。</summary>\r\n    Scrapter,\r\n\r\n    /// <summary>\r\n    /// 正式发行版。\r\n    /// 除此之外若要发行，全部使用OpenBeta。\r\n    /// </summary>\r\n    Release,\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/main.cs b/FinalSuspect/main.cs
--- a/FinalSuspect/main.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/main.cs	(date 1748095271938)
@@ -53,7 +53,7 @@
     /// </summary>
     private const VersionTypes DisplayedVersion_Type = VersionTypes.Canary;
 
-    private const int DisplayedVersion_TestCreation = 8;
+    private const int DisplayedVersion_TestCreation = 9;
 
     public static readonly string DisplayedVersion =
 #if RELEASE
Index: Assets/Languages/German.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># FinalSuspect 的语言文件 / Translation file of FinalSuspect\r\n\r\n# 当前翻译文件语言的ID / Language ID of current file\r\nLangID: \"9\"\r\n\r\n# 作者署名（不需要请留空）/ A sign of an author (Please leave blank when not needed)\r\n# 注: 为了防止您的翻译在版本更新中重制，请在本地目录Among Us/Final Suspect_Data/Bypass/中添加文件: BypassCheck_Languages_Longterm.xwc(仅需空文件即可)\r\n# Note: To prevent your translation from being reset during version updates, please add the file: BypassCheck_Languages_Longterm.xwc (an empty file is sufficient) in the local directory Among Us/Final Suspect_Data/Bypass/.\r\nTextBelowVersionText: \"\"\r\n\r\n# 职业类型 / Role Type\r\nTypeImpostor: \"Impostor\"\r\nTypeCrewmate: \"Crewmate\"\r\n\r\n# 阵营 / Teams\r\nTeamImpostor: \"Team-Impostor\"\r\nTeamImpostorOnly: \"Impostor\"\r\nTeamCrewmate: \"Team-Crewmate\"\r\n\r\n# 伪装者数量文字 / Impostor Text\r\nImpostorNumImp: \"<color=#ff1919>Es gibt {0} Impostor in unserem Team</color>\"\r\nImpostorNumImpOnly: \"<color=#ff1919>Es gibt nur einen Impostor in der Menge</color>\"\r\nImpostorNumCrew: \"<color=#8cffff>Es gibt </color><color=#ff1919>{0}</color><color=#8cffff> Impostor unter uns</color>\"\r\n\r\n# 阵营开场\r\nImpostorIntroText: \"<color=#ff1919>Lass das Böse die Welt umhüllen!</color>\"\r\nImpostorIntroTextOnly: \"<color=#ff1919>Ich bin vielleicht allein, aber ich habe unendliche Kraft!</color>\"\r\nCrewmateIntroText: \"<color=#8cffff>Erledige deine Aufgaben, vereint euch, um diese schwierigen Situationen zu lösen!</color>\"\r\n\r\n## 原版职业 / Vanilla\r\nCrewmate: \"Crewmate\"\r\nEngineer: \"Ingenieur\"\r\nScientist: \"Wissenschaftler\"\r\nTracker: \"Tracker\"\r\nNoisemaker: \"Störgeräusch\"\r\nGuardianAngel: \"Schutzengel\"\r\nImpostor: \"Impostor\"\r\nShapeshifter: \"Formwandler\"\r\nPhantom: \"Phantom\"\r\nCrewmateGhost: \"Crewmate Geist\"\r\nImpostorGhost: \"Impostor Geist\"\r\nCrewmateGhostBlurb: \"Erledige deine Aufgaben\"\r\nImpostorGhostBlurb: \"Sabotiere weiterhin die Einrichtungen\"\r\nCrewmateGhostBlurbLong: \"Erledige Aufgaben, bleibe nicht zurück!\"\r\nImpostorGhostBlurbLong: \"Sabotiere Einrichtungen, unterstütze die überlebenden Impostor bei einem Sieg.\"\r\n\r\n## 捉迷藏 / HnS\r\nHnSEngineerBlurb: \"Überlebe bis zum Ende!\"\r\nHnSEngineerBlurbLong: \"Bleibe am Leben, bis die Zeit abläuft; Aufgaben erledigen verlängert die Zeit. \\nNutze Schächte und Bedrohungshinweise, um dich zu verstecken! \\nSobald der Timer startet, beginnt der Impostor mit der Jagd auf dich!\"\r\nHnSImpostorBlurb: \"Eliminiere jeden!\"\r\nHnSImpostorBlurbLong: \"Töte alle Crewmitglieder innerhalb der Zeitgrenze! \\nDu musst schnell handeln! Schächte sind nicht zugänglich. \\nZuletzt erhältst du einen Geschwindigkeitsbonus und Ortungshinweise!\"\r\nHnSCrewmateGhostBlurb: \"Muntere deine Teamkollegen an\"\r\nHnSCrewmateGhostBlurbLong: \"Los geht's! Muntere an! Für! Deine! Teamkollegen!\"\r\n\r\n# 死因 / Death Reason\r\nDeathReason.Kill: \"Getötet\"\r\nDeathReason.Exile: \"Verbannt\"\r\nDeathReason.Disconnect: \"Verbindung getrennt\"\r\n\r\n# 客户端选项 / Client Options\r\nFinalSuspectOptions: \"Final Suspect Optionen\"\r\nBack: \"Zurück\"\r\nYes: \"Ja\"\r\nNo: \"Nein\"\r\nUnlockFPS: \"FPS entsperren\"\r\nChangeOutfit: \"Outfit ändern\"\r\nBeanMode: \"Klassischer Bohne-Modus\"\r\nHorseMode: \"April Fool Pferde-Modus\"\r\nLongMode: \"April Fool Lang-Modus\"\r\nKickPlayerFriendCodeNotExist: \"Spieler ohne Freundecode ausschließen.\"\r\nKickPlayerWithDenyName: \"Spieler mit unzulässigen Nicknames ausschließen\"\r\nKickPlayerInBanList: \"Gesperrte Spieler ausschließen\"\r\nSpamDenyWord: \"Unzulässige Wörter blockieren\"\r\nAutoStartGame: \"Automatisch starten, wenn der Lobby voll ist\"\r\nAutoEndGame: \"Automatisch zur Lobby zurückkehren, wenn das Spiel endet\"\r\nSwitchVanilla: \"Zurück zur Originalversion wechseln\"\r\nDisableVanillaSound: \"Among Us Musik deaktivieren\"\r\nDisableFAC: \"Anti-Cheat deaktivieren\"\r\nShowPlayerInfo: \"Spielerplattform und Clientinformationen anzeigen\"\r\nUseModCursor: \"Mod-Cursor verwenden\"\r\nFastBoot: \"Schnellstartmodus\"\r\nPrunkMode: \"Scherzmodus\"\r\nVersionCheat: \"Mod-Version-Synchronitätsprüfung umgehen\"\r\nGodMode: \"Gott-Modus\"\r\nNoGameEnd: \"Kein Spielende\"\r\nEnableFinalSuspect: \"「Final Suspect」 aktivieren\"\r\n\r\n# 客户端功能 / Client Features\r\nFinalSuspectFeatures: \"Final Suspect Funktionen\"\r\nUnloadMod: \"Zurück zur Originalversion wechseln\"\r\nUnloadWarning: \"<color=#ffff00><size=200%>Warnung</size></color>\\nUm das Mod erneut zu aktivieren, musst du das Spiel neu starten.\\nMöchtest du trotzdem fortfahren?\"\r\nCannotUnloadDuringGame: \"Während des Spiels kann nicht zur Originalversion gewechselt werden\"\r\nCancel: \"Abbrechen\"\r\nUnload: \"Deaktivieren\"\r\nDumpLog: \"Log auswerfen\"\r\nClearAutoLogs: \"Automatische Protokolle löschen\"\r\nSoundOptions: \"Meine Musik\"\r\nAudioManagementOptions: \"Audioverwaltung\"\r\nOnlyAvailableInMainMenu: \"Nur im Hauptmenü verfügbar\"\r\n\r\n# 提示 / Tips\r\nupdatePleaseWait: \"Bitte warten...\"\r\nupdateInProgress: \"Aktualisierung läuft...\"\r\nDownloadingAudios: \"Download läuft...\"\r\nPlaying: \"Wird gespielt...\"\r\nParsing: \"Analyse...\"\r\nDownLoadSucceedNotice: \"Download erfolgreich!\"\r\nDownLoadFailureNotice: \"Download fehlgeschlagen =(\"\r\nPleaseWait: \"Bitte warten...\"\r\n\r\n# 更新检查 / Update Checker\r\nRetry: \"Wiederholen\"\r\nupdateCheckPopupTitle: \"Aktualisierungsprüfung\"\r\nupdateCheckFailedRetry: \"Aktualisierungsprüfung fehlgeschlagen :(\\nWiederholen?\"\r\nupdateCheckFailedExit: \"Aktualisierungsprüfung fehlgeschlagen :(\\nBitte überprüfe deine Internetverbindung und versuche es erneut.\"\r\n\r\n# 更新提醒 / Update Reminder\r\nUpdateBySelfTitle: \"Aktualisierungserinnerung\"\r\nupdateNotice: \"Aktualisierungserinnerung\"\r\nUpdateBySelfText: \"Diese Version unterstützt keine automatischen Aktualisierungen. Bitte aktualisiere manuell.\"\r\nupdateButton: \"Jetzt aktualisieren\"\r\nupdatePopupTitle: \"Jetzt aktualisieren\"\r\nupdatePopupTitleFailed: \"Aktualisierung fehlgeschlagen\"\r\nupdatePopupTitleDone: \"Aktualisierung abgeschlossen\"\r\n\r\n# 选择更新渠道 / Update Chose Source\r\nupdateChoseSource: \"Bitte wähle eine Quelle für die Aktualisierung\\nwenn du nicht weißt, was auswählen, wähle [Github]\\nwenn die Aktualisierung fehlgeschlagen ist, wähle [Api]\"\r\nupdateSource.Github: \"Github\"\r\nupdateSource.Gitee: \"Gitee\"\r\nupdateSource.XtremeApi: \"Api\"\r\n\r\n# 更新结束提示 / Update completion prompts\r\nupdateRestart: \"Starte das Spiel neu, um die Änderungen zu übernehmen :)\"\r\nupdatePingFialed: \"Grund: {0}\\nDer gewählte Kanal könnte vorübergehend nicht verfügbar sein. Versuche einen anderen Download-Kanal.\"\r\nupdateFileMd5Incorrect: \"Grund: Dateiprüfsumme fehlerhaft\\nDie Dateiversion von diesem Kanal ist nicht die neueste. Versuche einen anderen Download-Kanal.\"\r\ndownloadFailed: \"Grund: Download abgelaufen oder unterbrochen\\nVersuche es nach einem Netzwerkwechsel oder aktualisiere manuell.\"\r\n\r\n# 无法加入公开游戏原因 / Unable to join public game reasons\r\nonSetPublicNoLatest: \"Wir haben eine wichtige Aktualisierung. Bitte aktualisiere dieses Mod.\\nAnsonsten kannst du keine öffentlichen Räume betreten.\"\r\nCanNotJoinPublicRoomNoLatest: \"Wir haben eine wichtige Aktualisierung. Bitte aktualisiere dieses Mod.\\nAnsonsten kannst du keine öffentlichen Räume betreten.\"\r\nModBrokenMessage: \"Die Mod-Dateien sind beschädigt. Bitte starte das Spiel neu oder installiere dieses Mod erneut.\"\r\nUnsupportedVersion: \"Deine Version von Among Us ist nicht kompatibel mit FinalSuspect.\\nBitte aktualisiere dein Spiel.\"\r\n\r\n# 音频播放 / Audio Playback\r\nPlayMode0: \"Einmal abspielen\"\r\nPlayMode1: \"Einzelnes Lied wiederholen\"\r\nPlayMode2: \"Zufällig\"\r\nPlayMode3: \"Sequenziell\"\r\nStop: \"Stoppen\"\r\nCanPlay: \"← Klicke zum Abspielen\"\r\nNoFound: \"[Datei fehlt]\"\r\nNextPage: \"Nächste Seite\"\r\nPreviousPage: \"Vorherige Seite\"\r\n\r\n# 音频添加 / Audio Addition\r\ndownload: \"Herunterladen\"\r\ndelete: \"Löschen\"\r\nNewSound: \"Neue Musik hinzufügen\"\r\nPleaseEnterMusic: \"Bitte gib den Musiknamen ein\"\r\nAudioManagementAlreadyExists: \"Dieser Musikname existiert bereits\"\r\nNotAllowedMusic: \"Das Musiknamensformat ist nicht erlaubt\"\r\n\r\n# 界面提示 / Interface Tips\r\nCustomAudioManagementHelp: \"Du kannst Musik herunterladen, die von XtremeWave unterstützt wird, oder deine eigene Musik im 「Audio Management｣ hinzufügen. Wenn du deine eigene Musik hinzufügst, stelle sicher, dass du den Musiknamen im 「Audio Management｣ hinzufügst und die entsprechende Audiodatei im Ordner 「Among Us/Final Suspect_Data/Resources/Sounds」 ablegst (unterstützte Formate: .wav). Musik kann in 「Meine Musik｣ abgespielt werden.\"\r\n# , .flac, .aiff, .mp3, .aac, .ogg, .m4a\r\nCustomSoundHelp: \"Du kannst Musik herunterladen, die von XtremeWave unterstützt wird, oder deine eigene Musik im 「Audio Management｣ hinzufügen. Wenn der lokale Musikressourcenpfad fehlt, wird angezeigt: 「[Datei fehlt]｣.\"\r\n\r\n# 主界面音乐提醒 / Main Menu Music Reminder\r\nMusicNotYet: \"Aktuelle Musikdatei wurde als unvollständig erkannt\"\r\nAudioNYPro: \"Für ein besseres Spielerlebnis kannst du unsere Musik in 「Start-Einstellungen-Mehr Funktionen-Audioverwaltung｣ herunterladen.\"\r\n\r\n# 官方音乐 / Official Musics\r\nMus.GongXiFaCai: \"恭喜发财\"\r\nMus.NeverGonnaGiveYouUp: \"Never Gonna Give You Up\"\r\nMus.CountingStars: \"Counting Stars\"\r\n\r\nMus.TidalSurge: \"Tidal Surge\"\r\nMus.TrailOfTruth: \"Trail Of Truth\"\r\nMus.Interlude: \"Interlude\"\r\nMus.Fractured: \"Fractured\"\r\nMus.ElegyOfFracturedVow: \"Elegy Of Fractured Vow\"\r\nMus.VestigiumSplendoris: \"Vestigium Splendoris\"\r\nMus.ReturnToSimplicity: \"Return To Simplicity\"\r\nMus.Affinity: \"Affinity\"\r\nMus.Inceps_Plus_InProgress: \"Inceps + InProgress\"\r\n\r\n# 信息 / Messages\r\nMessage.KickedByDenyName: \"[{0}] wurde entfernt, weil sein Name mit [{1}] übereinstimmte\"\r\nMessage.BanedByBanList: \"[{0}] wurde gebannt, weil er zuvor gebannt wurde.\"\r\nMessage.BanedByFACList: \"[{0}] wurde gebannt, weil er auf der FAC-Banned-Personen-Liste steht.\"\r\nMessage.DumpfileSaved: \"Die Logdatei wurde erfolgreich auf dem Desktop gespeichert, Dateiname: {0}\"\r\nMessage.KickedByNoFriendCode: \"[{0}] wurde entfernt, weil sein Freundecode nicht existiert.\"\r\nMessage.AddedPlayerToBanList: \"[{0}] wurde zur Banliste hinzugefügt\"\r\nMessage.KickedByFAC: \"[{0}] wurde von FAC entfernt, Grund: {1}\"\r\nMessage.BanedByFAC: \"[{0}] wurde von FAC entfernt, Grund:{1}\"\r\n\r\n# 通知 / Notifications\r\nPlayerLeft: \"[{0}] hat das Spiel verlassen\"\r\nPlayerLeftCuzTimeout: \"[{0}] hat das Spiel verlassen, weil die <color=#CA8A8A>Verbindungstimeout</color> abgelaufen ist\"\r\nPlayerKickByHost: \"[{0}] wurde vom Host entfernt\"\r\nPlayerBanByHost: \"[{0}] wurde vom Host gebannt\"\r\nPlayerLeftCuzError: \"[{0}] hat das Spiel verlassen, weil ein <color=#E57373>Fehler</color> aufgetreten ist\"\r\nPlayerLeftByAU-Anticheat: \"[{0}] wurde von den offiziellen Anti-Cheat-Systemen von AmongU entfernt (nicht im Zusammenhang mit <color=#cecdfd>FinalSuspect</color>)\"\r\nKickBecauseDiffrentVersionOrMod: \"[{0}] wurde entfernt, weil er eine andere Version des Mods hatte\"\r\n\r\n# 警告 / Warnings\r\nWarning: \"Warnung!\"\r\nWarning.MismatchedVersion: \"{0}\\nhat eine andere Version von {1}\"\r\nWarning.AutoExitAtMismatchedVersion: \"Der Host hat keine oder eine andere Version von {0}\\nDu wirst in {1} entfernt\"\r\nWarning.InvalidRpc: \"{0} wurde entfernt, weil ein ungültiges RPC empfangen wurde.\"\r\nWarning.InvalidRpc_NotHost: \"{0} wird verdächtigt, Cheats zu verwenden. Bitte den Host darum bitten, ihn zu entfernen <color=#ffff00>(Ungültiges Rpc:{1})</color>\"\r\nWarning.SetName: \"{0} wurde entfernt, weil er mehrmals einen Namen gesetzt hat.\"\r\nWarning.SetName_NotHost: \"{0} wird verdächtigt, Cheats zu verwenden. Bitte den Host darum bitten, ihn zu entfernen <color=#ffff00>(Mehrfach Namenssetzung)</color>\"\r\nWarning.SendQuickChat: \"{0} wurde entfernt, weil er innerhalb von 3 Sekunden mehrere Quick-Nachrichten gesendet hat\"\r\nWarning.SendQuickChat_NotHost: \"{0} wird verdächtigt, Cheats zu verwenden. Bitte den Host darum bitten, ihn zu entfernen <color=#ffff00>(Versand mehrerer Quick-Nachrichten innerhalb von 3 Sekunden)</color>\"\r\nWarning.InvalidSlothRPC: \"{0} wurde entfernt, da ein ungültiges RPC empfangen wurde <color=#ffff00>(Ungültiges Senden des offiziellen Rpc: {1})</color>\"\r\nWarning.InvalidSlothRPC_NotHost: \"{0} wird verdächtigt, Cheats zu verwenden. Bitte den Host darum bitten, ihn zu entfernen <color=#ffff00>(Ungültiges offizielles Rpc senden: {1})</color>\"\r\nWarning.Cheater: \"{0} wurde entfernt, da er verdächtigt wird, Cheats zu verwenden\"\r\nWarning.Cheater_NotHost: \"{0} wird verdächtigt, Cheats zu verwenden. Bitte bitten Sie den Host, ihn zu entfernen\"\r\nWarning.CantKickDev: \"Entschuldigung, du kannst den Entwickler nicht entfernen\"\r\nWarning.RoomBroken: \"Entschuldigung, dieses Zimmer wurde sabotiert. Bitte gehe in ein anderes Zimmer, um weiterzuspielen.\"\r\n\r\n## 错误等级 / Error Levels\r\nErrorLevel1: \"Es können Fehler auftreten.\"\r\nErrorLevel2: \"Dies könnte ein Fehler sein.\"\r\nErrorLevel3: \"Diese Version hätte nicht veröffentlicht werden sollen.\"\r\n\r\n# 反作弊 / FAC\r\nFAC.CheatDetected.HighLevel: \"Warnung: FAC hat ein hohes Niveau an Cheats erkannt.\"\r\nFAC.CheatDetected.LowLevel: \"Warnung: FAC hat ein niedriges Niveau an Cheats erkannt. Einer der Spieler hackt.\"\r\nFAC.CheatDetected.FAC: \"Verwendung von Cheat-Programmen (z.B. AUM, YuMenu, SM, usw.)\"\r\n\r\n# 模组信息 / Mod Infos\r\nContributors: \"Mitwirkende\"\r\nAcknowledgement: \"Danksagung\"\r\n\r\n# 断连提示 / Disconect Reasons\r\nDCNotify.Hacking: \"Du wurdest von dem Anti-Cheat-System entfernt.\\n (Die Verwendung von Mods kann als Cheat missinterpretiert werden)\"\r\nDCNotify.Banned: \"Du bist nicht erlaubt, diesen Raum zu betreten\"\r\nDCNotify.Kicked: \"Du wurdest aus dem Raum entfernt\"\r\nDCNotify.DCFromServer: \"Du wurdest vom Server getrennt.\\nDies kann aufgrund von Instabilitäten in deinem Netzwerk oder auf dem Server vorkommen.\"\r\nDCNotify.GameNotFound: \"Der zugewiesene Raum wurde nicht gefunden, der Raum könnte aufgelöst worden sein\\n oder überprüfe, ob du einen anderen Server als den Raum ausgewählt hast\"\r\nDCNotify.GameStarted: \"Das Spiel hat bereits begonnen, bitte warte, bis es zu Ende ist\"\r\nDCNotify.GameFull: \"Der Raum ist voll, bitte versuche es später noch einmal\"\r\nDCNotify.IncorrectVersion: \"Deine Version von Among Us ist anders als diese Raum\"\r\nDCNotify.Description: \"Du wurdest aus dem Spiel entfernt.\\nGrund: {0}\"\r\nDCNotify.DenyName: \"Dein Spitzname enthält unregelmäßige Zeichen\"\r\nDCNotify.BanList: \"Du wurdest vom Host gebannt\"\r\nDCNotify.FACList: \"Du wurdest von FAC gebannt\"\r\nDCNotify.CheatDetected: \"Du wurdest von FAC als verdächtig erkannt\"\r\nDCNotify.InvalidRPC: \"Du hast möglicherweise einen anderen Mod als der Host installiert oder dein Mod wurde bösartig geändert\"\r\nDCNotify.ModVersionIncorrect: \"Deine Mod-Version ist anders als die des Hosts\"\r\nDCNotify.LowLevel: \"Dein Level erfüllt die Anforderungen dieses Raumes nicht\"\r\nDCNotify.NotLogin: \"Nicht angemeldete Spieler sind in diesem Raum nicht erlaubt\"\r\n\r\n# 任务栏 / Task Panel\r\nPressF1ShowRoleDescription: \"Drücke F1, um deine Rollenbeschreibung anzuzeigen\"\r\nFakeTask: \"Falsche Aufgabe:\"\r\nKillCount: \"Tötungen\"\r\n\r\n# 复盘信息 / Last Results\r\nRoleSummaryText: \"Letzte Ergebnisse:\"\r\nShowResults: \"Letzte Ergebnisse anzeigen\"\r\nHideResults: \"Letzte Ergebnisse verbergen\"\r\nNoInfoExists: \"Keine letzten Ergebnisse verfügbar\"\r\nCrewsWin: \"<color=#8cffff>Team-Crewmate Win</color>\"\r\nCrewmatesWin: \"Crewmates Win\"\r\nCrewmatesWinBlurb: \"Das Licht der Wahrheit leuchtet in der Hoffnung!\"\r\nImpsWin: \"<color=#ff1919>Team-Impostor Win</color>\"\r\nImpostorsWin: \"Impostors Win\"\r\nImpostorsWinBlurb: \"Das Böse verwandelt die Wahrheit in Asche\"\r\nHideSummaryTextToShowWinText: \"<color=#ffff00>Verberge letztes Ergebnis, um Siegertext anzuzeigen</color>\"\r\n\r\n# 禁用公开\r\nDisabledByProgram: \"Öffentliche Raumoperationen wurden vom Programm deaktiviert\"\r\nPublicNotAvailableOnThis Version: \"Öffentliche Räume sind in dieser Version von FinalSuspect nicht verfügbar\"\r\n\r\n# 主页 / Main UI\r\nFinalSuspectWelcomeText: \"Wünsche dir eine angenehme <color={0}>Spielserien</color>!\"\r\nConnectToFinalSuspectServerFailed: \"Verbindung zum FinalSuspect-Server fehlgeschlagen\"\r\nLShift: \"LShift: Drücke LShift, um zurückzukehren\"\r\nRShift: \"RShift: Drücke RShift, um dorthin zu gelangen\"\r\nWebsite: \"Offizielle Website\"\r\nMainMenuCredential: \"{0} © 2025\"\r\nLShift: \"Vorheriger Saal [LShift]\"\r\nRShift: \"Zwischenablage Lobby [RShift]\"\r\nLobbyTimeDisplayText: \"Zeit des Bestehens\"\r\n\r\n# 客户端平台 / Platform\r\nIPhone: \"IPhone\"\r\nAndroid: \"Android\"\r\nMicrosoftStore: \"Microsoft\"\r\n\r\n# 延迟显示 / Ping Tracker\r\nPing: \"Ping\"\r\nFrameRate: \"Framerate\"\r\nServer: \"Server\"\r\nLocal: \"<color=#D1FA87>Lokal</color>\"\r\n\r\n# 其他 / Other\r\nHongKong: \"Hongkong\"\r\nFPSSetTo: \"Framerate-Begrenzung auf: {0} gesetzt\"\r\nBrowsingMode: \"Durchsuchungsmodus\"\r\nBroken: \"Defekt\"\r\n\r\n# 加载 / Loading\r\nLanguageFilesLoadingComplete: \"Übersetzungen wurden erfolgreich geladen!\"\r\nCheckingForFiles: \"Überprüfe die Integrität der Ressourcendateien...\"\r\nDownloadingResources: \"Ressourcendateien werden heruntergeladen...\"\r\nLoading: \"Wird geladen\"\r\nLoadingWithDot: \"Wird geladen...\"\r\nLoadingComplete: \"Laden abgeschlossen!\"\r\n\r\n# 身份 / Identity\r\nHost: \"Gastgeber\"\r\nCheater: \"Cheater\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Assets/Languages/German.yaml b/Assets/Languages/German.yaml
--- a/Assets/Languages/German.yaml	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/Assets/Languages/German.yaml	(date 1748096400030)
@@ -278,8 +278,6 @@
 # 主页 / Main UI
 FinalSuspectWelcomeText: "Wünsche dir eine angenehme <color={0}>Spielserien</color>!"
 ConnectToFinalSuspectServerFailed: "Verbindung zum FinalSuspect-Server fehlgeschlagen"
-LShift: "LShift: Drücke LShift, um zurückzukehren"
-RShift: "RShift: Drücke RShift, um dorthin zu gelangen"
 Website: "Offizielle Website"
 MainMenuCredential: "{0} © 2025"
 LShift: "Vorheriger Saal [LShift]"
Index: FinalSuspect/Patches/System/LobbyScreenPatch.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Text.RegularExpressions;\r\nusing AmongUs.Data;\r\nusing FinalSuspect.Helpers;\r\nusing InnerNet;\r\nusing TMPro;\r\nusing UnityEngine;\r\n\r\nnamespace FinalSuspect.Patches.System;\r\n\r\n[HarmonyPatch]\r\npublic sealed class LobbyJoinBind\r\n{\r\n    private static int GameId;\r\n    public static Color Color = ColorHelper.LoadCompleteGreen;\r\n    public static GameObject LobbyText;\r\n\r\n    [HarmonyPatch(typeof(InnerNetClient), nameof(InnerNetClient.JoinGame))]\r\n    [HarmonyPostfix]\r\n    public static void Postfix(InnerNetClient __instance)\r\n    {\r\n        GameId = __instance.GameId;\r\n    }\r\n\r\n    [HarmonyPatch(typeof(MainMenuManager), nameof(MainMenuManager.Start))]\r\n    [HarmonyPostfix]\r\n    public static void Postfix()\r\n    {\r\n        var code2 = GUIUtility.systemCopyBuffer;\r\n\r\n        if (code2.Length != 6 || !Regex.IsMatch(code2, @\"^[a-zA-Z]+$\"))\r\n            code2 = \"\";\r\n\r\n        if (!LobbyText)\r\n        {\r\n            LobbyText = new GameObject(\"lobbycode\");\r\n            LobbyText.transform.SetParent(GameObject.Find(\"RightPanel\").transform, false);\r\n            var comp = LobbyText.AddComponent<TextMeshPro>();\r\n            comp.fontSize = 2.5f;\r\n            comp.outlineWidth = -2f;\r\n            float lastY = code2 == \"\" ? -0.15f : 0.1f;\r\n            LobbyText.transform.localPosition = new Vector3(8f, lastY, 0);\r\n            LobbyText.SetActive(true);\r\n        }\r\n    }\r\n\r\n    [HarmonyPatch(typeof(MainMenuManager), nameof(MainMenuManager.LateUpdate))]\r\n    [HarmonyPostfix]\r\n    public static void Postfix(MainMenuManager __instance)\r\n    {\r\n        var code2 = GUIUtility.systemCopyBuffer;\r\n\r\n        if (code2.Length != 6  || !Regex.IsMatch(code2, @\"^[a-zA-Z]+$\"))\r\n            code2 = \"\";\r\n        var code2Disp = DataManager.Settings.Gameplay.StreamerMode ? new string('*', code2.Length) : code2.ToUpper();\r\n        if (GameId != 0 && Input.GetKeyDown(KeyCode.LeftShift))\r\n        {\r\n            __instance.StartCoroutine(AmongUsClient.Instance.CoJoinOnlineGameFromCode(GameId));\r\n            LobbyText.GetComponent<TextMeshPro>().color = Color.AlphaMultiplied(0.75f);\r\n        }\r\n\r\n        else if (Input.GetKeyDown(KeyCode.RightShift) && code2 != \"\")\r\n        {\r\n            __instance.StartCoroutine(AmongUsClient.Instance.CoJoinOnlineGameFromCode(GameCode.GameNameToInt(code2)));\r\n            LobbyText.GetComponent<TextMeshPro>().color = Color.AlphaMultiplied(0.75f);\r\n        }\r\n\r\n        if (LobbyText)\r\n        {\r\n            LobbyText.GetComponent<TextMeshPro>().text = \"\";\r\n            if (GameId != 0 && GameId != 32)\r\n            {\r\n                var code = GameCode.IntToGameName(GameId);\r\n                if (code != \"\")\r\n                {\r\n                    code = DataManager.Settings.Gameplay.StreamerMode ? new string('*', code.Length) : code;\r\n                    LobbyText.GetComponent<TextMeshPro>().text = string.Format($\"{GetString(\"LShift\")}：<color={ColorHelper.ModColor}>{code}</color>\");\r\n                }\r\n            }\r\n\r\n            if (code2 != \"\") LobbyText.GetComponent<TextMeshPro>().text += string.Format($\"\\n{GetString(\"RShift\")}：<color={ColorHelper.ModColor}>{code2Disp}</color>\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/Patches/System/LobbyScreenPatch.cs b/FinalSuspect/Patches/System/LobbyScreenPatch.cs
--- a/FinalSuspect/Patches/System/LobbyScreenPatch.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/Patches/System/LobbyScreenPatch.cs	(date 1748098309146)
@@ -49,7 +49,7 @@
     {
         var code2 = GUIUtility.systemCopyBuffer;
 
-        if (code2.Length != 6  || !Regex.IsMatch(code2, @"^[a-zA-Z]+$"))
+        if (code2.Length != 6 || !Regex.IsMatch(code2, @"^[a-zA-Z]+$"))
             code2 = "";
         var code2Disp = DataManager.Settings.Gameplay.StreamerMode ? new string('*', code2.Length) : code2.ToUpper();
         if (GameId != 0 && Input.GetKeyDown(KeyCode.LeftShift))
@@ -73,11 +73,14 @@
                 if (code != "")
                 {
                     code = DataManager.Settings.Gameplay.StreamerMode ? new string('*', code.Length) : code;
-                    LobbyText.GetComponent<TextMeshPro>().text = string.Format($"{GetString("LShift")}：<color={ColorHelper.ModColor}>{code}</color>");
+                    LobbyText.GetComponent<TextMeshPro>().text =
+                        string.Format($"{GetString("LShift")}：<color={ColorHelper.ModColor}>{code}</color>");
                 }
             }
 
-            if (code2 != "") LobbyText.GetComponent<TextMeshPro>().text += string.Format($"\n{GetString("RShift")}：<color={ColorHelper.ModColor}>{code2Disp}</color>");
+            if (code2 != "")
+                LobbyText.GetComponent<TextMeshPro>().text +=
+                    string.Format($"\n{GetString("RShift")}：<color={ColorHelper.ModColor}>{code2Disp}</color>");
         }
     }
 }
\ No newline at end of file
Index: FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/TaskHandler.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections.Generic;\r\nusing FinalSuspect.DataHandling.FinalAntiCheat.Interfaces;\r\nusing FinalSuspect.Modules.Core.Game;\r\nusing Hazel;\r\n\r\nnamespace FinalSuspect.DataHandling.FinalAntiCheat.Handlers.Valid;\r\n\r\n// 1\r\npublic class TaskHandler : IRpcHandler\r\n{\r\n    public List<byte> TargetRpcs =>\r\n    [\r\n        (byte)RpcCalls.CompleteTask\r\n    ];\r\n\r\n    public bool HandleLobby(PlayerControl sender, MessageReader reader,\r\n        ref bool notify, ref string reason, ref bool ban)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    public bool HandleGame_InTask(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason, ref bool ban)\r\n    {\r\n        return sender.IsImpostor();\r\n    }\r\n\r\n    public bool HandleGame_InMeeting(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason, ref bool ban)\r\n    {\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/TaskHandler.cs b/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/TaskHandler.cs
--- a/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/TaskHandler.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/TaskHandler.cs	(date 1748098307161)
@@ -19,12 +19,14 @@
         return true;
     }
 
-    public bool HandleGame_InTask(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason, ref bool ban)
+    public bool HandleGame_InTask(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason,
+        ref bool ban)
     {
         return sender.IsImpostor();
     }
 
-    public bool HandleGame_InMeeting(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason, ref bool ban)
+    public bool HandleGame_InMeeting(PlayerControl sender, MessageReader reader, ref bool notify, ref string reason,
+        ref bool ban)
     {
         return true;
     }
Index: FinalSuspect/Modules/Core/Game/ServerAddManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections.Generic;\r\nusing System.Linq;\r\nusing FinalSuspect.Attributes;\r\nusing FinalSuspect.Helpers;\r\nusing FinalSuspect.Patches.System;\r\nusing UnityEngine;\r\n\r\nnamespace FinalSuspect.Modules.Core.Game;\r\n\r\npublic static class ServerAddManager\r\n{\r\n    private static readonly ServerManager serverManager = DestroyableSingleton<ServerManager>.Instance;\r\n\r\n    [PluginModuleInitializer]\r\n    public static void Init()\r\n    {\r\n        serverManager.AvailableRegions = ServerManager.DefaultRegions;\r\n        List<IRegionInfo> regionInfos =\r\n        [\r\n            CreateHttp(\"au-us.niko233.me\", \"Niko233(NA)\", 443, true),\r\n            CreateHttp(\"au-as.niko233.me\", \"Niko233(AS)\", 443, true),\r\n            CreateHttp(\"au-eu.niko233.me\", \"Niko233(EU)\", 443, true)\r\n        ];\r\n\r\n        if (IsChineseUser)\r\n        {\r\n            regionInfos.Add(CreateHttp(\"au-cn.niko233.me\", \"Niko233(CN)\", 443,\r\n                true));\r\n            regionInfos.Add(CreateHttp(\"nb.8w.fan\", \"<color=#00FF00>新猫服</color><color=#ffff00>[宁波]</color>\", 443,\r\n                true));\r\n            regionInfos.Add(CreateHttp(\"bj.8w.fan\", \"<color=#9900CC>新猫服</color><color=#ffff00>[北京]</color>\", 443,\r\n                true));\r\n            regionInfos.Add(CreateHttp(\"player.fangkuai.fun\", \"<color=#00ffff>方块</color><color=#FF44FF>宿迁私服</color>\", 443,\r\n                true));\r\n            regionInfos.Add(CreateHttp(\"auhk.fangkuai.fun\", \"<color=#00ffff>方块</color><color=#FFC0CB>香港私服</color>\", 443,\r\n                true));\r\n        }\r\n\r\n        regionInfos.Add(CreateHttp(\"au-as.duikbo.at\", \"Modded Asia (MAS)\", 443, true));\r\n        regionInfos.Add(CreateHttp(\"www.aumods.org\", \"Modded NA (MNA)\", 443, true));\r\n        regionInfos.Add(CreateHttp(\"au-eu.duikbo.at\", \"Modded EU (MEU)\", 443, true));\r\n\r\n        var defaultRegion = serverManager.CurrentRegion;\r\n        regionInfos.Where(x => !serverManager.AvailableRegions.Contains(x)).Do(serverManager.AddOrUpdateRegion);\r\n        serverManager.SetRegion(defaultRegion);\r\n\r\n        SetServerName(defaultRegion.Name);\r\n    }\r\n\r\n    public static void SetServerName(string serverName = \"\")\r\n    {\r\n        if (serverName == \"\") serverName = ServerManager.Instance.CurrentRegion.Name;\r\n        var name = serverName switch\r\n        {\r\n            \"Modded Asia (MAS)\" => \"MAS\",\r\n            \"Modded NA (MNA)\" => \"MNA\",\r\n            \"Modded EU (MEU)\" => \"MEU\",\r\n            \"North America\" => \"NA\",\r\n            \"<color=#00FF00>新猫服</color><color=#ffff00>[宁波]</color>\" => \"猫服[宁波]\",\r\n            \"<color=#9900CC>新猫服</color><color=#ffff00>[北京]</color>\" => \"猫服[北京]\",\r\n            \"<color=#00ffff>方块</color><color=#FF44FF>宿迁私服</color>\" => \"方块[宿迁]\",\r\n            \"<color=#00ffff>方块</color><color=#FFC0CB>香港私服</color>\" => \"方块[香港]\",\r\n            \"Niko233(NA)\" => \"Niko[NA]\",\r\n            \"Niko233(AS)\" => \"Niko[AS]\",\r\n            \"Niko233(EU)\" => \"Niko[EU]\",\r\n            \"Niko233(CN)\" => \"Niko[CN]\",\r\n            \"XtremeWave[HongKong]\" => \"XW[HK]\",\r\n            _ => serverName,\r\n        };\r\n\r\n        if ((TranslationController.Instance?.currentLanguage?.languageID ?? SupportedLangs.SChinese) is\r\n            SupportedLangs.SChinese or SupportedLangs.TChinese)\r\n        {\r\n            name = name switch\r\n            {\r\n                \"Asia\" => \"亚服\",\r\n                \"Europe\" => \"欧服\",\r\n                \"North America\" => \"北美服\",\r\n                \"NA\" => \"北美服\",\r\n                \"XW[HK]\" => \"XW[香港]\",\r\n                _ => name,\r\n            };\r\n        }\r\n\r\n        var color = GetServerColor(serverName);\r\n        //Cloud.ServerName = name;\r\n        PingTrackerUpdatePatch.ServerName = StringHelper.ColorString(color, name);\r\n    }\r\n\r\n    private static Color GetServerColor(string serverName)\r\n    {\r\n        var color = serverName switch\r\n        {\r\n            \"Asia\" => new Color32(58, 166, 117, 255),\r\n            \"Europe\" => new Color32(58, 166, 117, 255),\r\n            \"North America\" => new Color32(58, 166, 117, 255),\r\n            \"Modded Asia (MAS)\" => new Color32(255, 132, 0, 255),\r\n            \"Modded NA (MNA)\" => new Color32(255, 132, 0, 255),\r\n            \"Modded EU (MEU)\" => new Color32(255, 132, 0, 255),\r\n            \"<color=#00FF00>新猫服</color><color=#ffff00>[宁波]</color>\" => new Color32(0, 255, 0, 255),\r\n            \"<color=#9900CC>新猫服</color><color=#ffff00>[北京]</color>\" => new Color32(153, 0, 204, 255),\r\n            \"<color=#00ffff>方块</color><color=#FF44FF>宿迁私服</color>\" => new Color32(0, 255, 255, 255),\r\n            \"<color=#00ffff>方块</color><color=#FFC0CB>香港私服</color>\" => new Color32(0, 255, 255, 255),\r\n            \"Niko233(NA)\" => new Color32(255, 224, 0, 255),\r\n            \"Niko233(AS)\" => new Color32(255, 224, 0, 255),\r\n            \"Niko233(EU)\" => new Color32(255, 224, 0, 255),\r\n            \"Niko233(CN)\" => new Color32(255, 224, 0, 255),\r\n            \"XtremeWave[HongKong]\" => ColorHelper.TeamColor32,\r\n\r\n            _ => new Color32(255, 255, 255, 255),\r\n        };\r\n        return color;\r\n    }\r\n\r\n    private static IRegionInfo CreateHttp(string ip, string name, ushort port, bool ishttps)\r\n    {\r\n        var serverIp = (ishttps ? \"https://\" : \"http://\") + ip;\r\n        var serverInfo = new ServerInfo(name, serverIp, port, false);\r\n        ServerInfo[] ServerInfo = [serverInfo];\r\n        var color = GetServerColor(name);\r\n        name = StringHelper.ColorString(color, name);\r\n        return new StaticHttpRegionInfo(name, (StringNames)1003, ip, ServerInfo).Cast<IRegionInfo>();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/Modules/Core/Game/ServerAddManager.cs b/FinalSuspect/Modules/Core/Game/ServerAddManager.cs
--- a/FinalSuspect/Modules/Core/Game/ServerAddManager.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/Modules/Core/Game/ServerAddManager.cs	(date 1748098308426)
@@ -30,7 +30,8 @@
                 true));
             regionInfos.Add(CreateHttp("bj.8w.fan", "<color=#9900CC>新猫服</color><color=#ffff00>[北京]</color>", 443,
                 true));
-            regionInfos.Add(CreateHttp("player.fangkuai.fun", "<color=#00ffff>方块</color><color=#FF44FF>宿迁私服</color>", 443,
+            regionInfos.Add(CreateHttp("player.fangkuai.fun", "<color=#00ffff>方块</color><color=#FF44FF>宿迁私服</color>",
+                443,
                 true));
             regionInfos.Add(CreateHttp("auhk.fangkuai.fun", "<color=#00ffff>方块</color><color=#FFC0CB>香港私服</color>", 443,
                 true));
Index: FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/VentHandler.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections.Generic;\r\nusing AmongUs.GameOptions;\r\nusing FinalSuspect.DataHandling.FinalAntiCheat.Interfaces;\r\nusing FinalSuspect.Modules.Core.Game;\r\nusing Hazel;\r\n\r\nnamespace FinalSuspect.DataHandling.FinalAntiCheat.Handlers.Valid;\r\n\r\n// 19, 20\r\npublic class VentHandler : IRpcHandler\r\n{\r\n    public List<byte> TargetRpcs =>\r\n    [\r\n        (byte)RpcCalls.EnterVent,\r\n        (byte)RpcCalls.ExitVent,\r\n    ];\r\n\r\n    public bool HandleAll(PlayerControl sender, MessageReader reader,\r\n        ref bool notify, ref string reason, ref bool ban)\r\n    {\r\n        return !sender.IsImpostor() && sender.GetRoleType() is not RoleTypes.Engineer and not RoleTypes.CrewmateGhost and not RoleTypes.GuardianAngel;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/VentHandler.cs b/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/VentHandler.cs
--- a/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/VentHandler.cs	(revision cf0fe79a0c6108662f6de75286f34f70f3e2aa70)
+++ b/FinalSuspect/DataHandling/FinalAntiCheat/Handlers/Valid/VentHandler.cs	(date 1748098308819)
@@ -18,6 +18,8 @@
     public bool HandleAll(PlayerControl sender, MessageReader reader,
         ref bool notify, ref string reason, ref bool ban)
     {
-        return !sender.IsImpostor() && sender.GetRoleType() is not RoleTypes.Engineer and not RoleTypes.CrewmateGhost and not RoleTypes.GuardianAngel;
+        return !sender.IsImpostor() &&
+               sender.GetRoleType() is not RoleTypes.Engineer and not RoleTypes.CrewmateGhost
+                   and not RoleTypes.GuardianAngel;
     }
 }
\ No newline at end of file
